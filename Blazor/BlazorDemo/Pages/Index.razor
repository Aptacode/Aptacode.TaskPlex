@using System.Drawing;
@using Aptacode.TaskPlex;
@using Microsoft.Extensions.Logging.Abstractions;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Rendering;
@using System.Numerics;
@using Aptacode.TaskPlex.Blazor.BlazorGraphics
@using Aptacode.TaskPlex.Engine
@using Aptacode.TaskPlex.Graphics.Nodes.Geometry;
@using Aptacode.TaskPlex.Graphics.Nodes.Transform;
@using Aptacode.TaskPlex.Graphics.Nodes.Attribute;
@using Aptacode.TaskPlex.Graphics;
@using Blazor.Extensions;
@using Models;

@page "/"

    <div style="position:fixed;min-height:100%;min-width:100%;height:100%;width:100%;top:0%;left:0%;resize:none;">
        <button class="btn btn-primary" @onclick="@Start">Start</button>
        <button class="btn btn-primary" @onclick="@Apply">Apply</button>

        <BECanvas Width="720" Height="480" @ref="_canvasReference"></BECanvas>
    </div>

@code
{

    protected BECanvasComponent _canvasReference;

    private BlazorCanvas canvas;
    private Scene scene;
    private StoryBoard storyBoard;
    private CoreEngine engine;

    public Index()
    {

    }

    private void Start()
    {
        canvas = new BlazorCanvas(_canvasReference);

        scene = SceneLoader.Load();
        storyBoard = SceneLoader.LoadStoryBoard(scene);
        engine = new CoreEngine(new SystemTimerUpdater(), canvas, scene, storyBoard, new PlexEngine(new NullLoggerFactory(), Engine.Enums.RefreshRate.Normal));
        engine.Start();
    }

    private void Apply()
    {
        engine.Apply("Load");
    }
}