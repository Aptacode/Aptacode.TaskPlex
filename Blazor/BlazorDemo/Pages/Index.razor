@using System.Drawing;
@using Aptacode.TaskPlex;
@using Microsoft.Extensions.Logging.Abstractions;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Rendering;
@using System.Numerics;
@using Aptacode.TaskPlex.Engine
@using Aptacode.TaskPlex.BlazorGraphics;
@using Aptacode.TaskPlex.Graphics.Nodes.Geometry;
@using Aptacode.TaskPlex.Graphics.Nodes.Transform;
@using Aptacode.TaskPlex.Graphics.Nodes.Attribute;

@page "/"

<div style="position:fixed;min-height:100%;min-width:100%;height:100%;width:100%;top:0%;left:0%;resize:none;">
    <button class="btn btn-primary" @onclick="@Start">Start</button>
    <BECanvas Width="720" Height="480" @ref="_canvasReference"></BECanvas>
</div>

@code
{

    protected Blazor.Extensions.BECanvasComponent _canvasReference;

    private readonly PlexEngine _engine;
    private readonly SystemTimerUpdater _updater;

    private BlazorCanvas _canvas;
    private SetColorNode _node;
    private RectangleNode _rectangle;

    public Index()
    {

        _updater = new SystemTimerUpdater();
        _updater.OnUpdate += async (s, e) =>
        {
            _node.Update(_canvas);
        };

        _engine = new PlexEngine(new NullLoggerFactory(), _updater);

    }

    private void CreateScene()
    {
        _canvas = new BlazorCanvas(_canvasReference);
        _canvas.Setup();

        _node = new SetColorNode() { Color = Color.Green };
        _rectangle = new RectangleNode() { Position = new System.Numerics.Vector2(10, 10), Size = new System.Numerics.Vector2(100, 100) };
        _node.Children.Add(_rectangle);
        _engine.Start();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }

    async Task Start()
    {
        CreateScene();

        //   _engine.Apply(PlexFactory.Create(_rectangle, "Position", TimeSpan.FromSeconds(1), Aptacode.TaskPlex.Interpolators.Easers.Easers.EaseInOutQuad, true, new Vector2(0, 0), new Vector2(670, 0), new Vector2(670, 430), new Vector2(0, 430), new Vector2(0, 0)));
    }
}